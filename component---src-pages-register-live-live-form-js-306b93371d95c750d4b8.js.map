{"version":3,"sources":["webpack:///./src/pages/register/live/live-form.js"],"names":["phoneRegExp","passwordRegExp","withNamespaces","connect","state","language","props","t","validationSchema","Yup","firstName","required","lastName","countryResidency","city","phone","matches","email","test","value","a","String","toLowerCase","isEmailAvailable","resp","result","availability","console","error","portalPassword","min","max","portalPasswordConfirm","oneOf","emailPin","length","tos","history","useState","activeSubmit","setActiveSubmit","isLoading","setIsLoading","setInfoBar","setErrorBar","partnerId","setPartnerId","ibId","setIbId","referral","setReferral","utmCampaign","setUtmCampaign","useEffect","params","URLSearchParams","window","location","search","get","utm","localStorage","setItem","submit","data","storedPartner","getItem","storedIbId","ibRef","storedRef","storedUtm","config","languages","find","v","key","key1","countryCode","getCountryCodeShort","registerLiveUser","isSuccess","replace","CP_GATE","initialValues","declarations","values","setValues","tmp","locateMe","currentCountry","getCountryByCountryCode","country","log","enableReinitialize","validateOnMount","validateOnChange","validate","validateOnBlur","onSubmit","Formis","errors","touched","handleSubmit","handleChange","setFieldTouched","setFieldValue","countries","getSortedCountries","havePin","setHavePin","verifingPin","setVerifingPin","verifiedPin","setVerifiedPin","pinBtnText","setPinBtnText","pinBtnIcon","setPinBtnIcon","phoneRef","useRef","pinRef","sendPin","e","lang","generatePin","verifyEmailPin","verifyPin","locale","i18n","changeLanguage","current","focus","selCountry","countryCallingCode","calling_code","handleBlur","field","showPasswpord1","setShowPassword1","showPasswpord2","setShowPassword2","className","variant","name","helperText","Boolean","label","onChange","target","onBlur","fullWidth","id","options","autoHighlight","blurOnSelect","getCountryObjByName","countryEn","getOptionLabel","option","countryAr","renderOption","renderInput","inputRef","inputProps","type","InputProps","endAdornment","aria-label","onClick","disabled","endIcon","checked","color","href","rel","style","fontSize","minWidth","size"],"mappings":"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","file":"component---src-pages-register-live-live-form-js-306b93371d95c750d4b8.js","sourcesContent":["import React, { Component, useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport i18n from '../../../helpers/i18n';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Snackbar,\r\n  CircularProgress,\r\n  InputAdornment,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { config } from \"../../../constants\"\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Send, ChevronRight, MoreHoriz, Check } from '@material-ui/icons';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  countryCallingCode,\r\n  getCountryByCountryCode,\r\n  getCountryObjByName,\r\n  getSortedCountries,\r\n  getCountryCodeShort\r\n} from '../../../common';\r\nimport { CP_GATE } from '../../../helpers/settings';\r\nimport {\r\n  generatePin,\r\n  isEmailAvailable,\r\n  verifyPin,\r\n  registerUser,\r\n  registerLiveUser,\r\n  locateMe\r\n} from '../../../reducers/Auth';\r\nimport { withNamespaces } from 'react-i18next';\r\n\r\nconst validEmail = (email) => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst phoneRegExp = /(\\+|00)(297|93|244|1264|358|355|376|971|54|374|1684|1268|61|43|994|257|32|229|226|880|359|973|1242|387|590|375|501|1441|591|55|1246|673|975|267|236|1|61|41|56|86|225|237|243|242|682|57|269|238|506|53|5999|61|1345|357|420|49|253|1767|45|1809|1829|1849|213|593|20|291|212|34|372|251|358|679|500|33|298|691|241|44|995|44|233|350|224|590|220|245|240|30|1473|299|502|594|1671|592|852|504|385|509|36|62|44|91|246|353|98|964|354|972|39|1876|44|962|81|76|77|254|996|855|686|1869|82|383|965|856|961|231|218|1758|423|94|266|370|352|371|853|590|212|377|373|261|960|52|692|389|223|356|95|382|976|1670|258|222|1664|596|230|265|60|262|264|687|227|672|234|505|683|31|47|977|674|64|968|92|507|64|51|63|680|675|48|1787|1939|850|351|595|970|689|974|262|40|7|250|966|249|221|65|500|4779|677|232|503|378|252|508|381|211|239|597|421|386|46|268|1721|248|963|1649|235|228|66|992|690|993|670|676|1868|216|90|688|886|255|256|380|598|1|998|3906698|379|1784|58|1284|1340|84|678|681|685|967|27|260|263)(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{4,20}$/im;\r\nconst passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z!@#$%^&*()_,.?\":{}|<>\\d]{8,20}$/;\r\n\r\nlet isPinVerified = false;\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      className=\"p-3\"\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}>\r\n      {value === index && <div>{children}</div>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nconst Form = (props) => {\r\n  const {\r\n    values: {\r\n      firstName,\r\n      lastName,\r\n      countryResidency,\r\n      city,\r\n      phone,\r\n      email,\r\n      portalPassword,\r\n      portalPasswordConfirm,\r\n      emailPin,\r\n      declarations,\r\n      tos\r\n    },\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    activeSubmit,\r\n    isLoading,\r\n    language\r\n  } = props;\r\n  const t = props.t;\r\n  const countries = getSortedCountries();\r\n  const [havePin, setHavePin] = useState(false);\r\n  const [verifingPin, setVerifingPin] = useState(false);\r\n  const [verifiedPin, setVerifiedPin] = useState(false);\r\n  const [pinBtnText, setPinBtnText] = useState(t('Send PIN'));\r\n  const [pinBtnIcon, setPinBtnIcon] = useState(<Send />);\r\n  const myhandleChange = (e) => {\r\n    setFieldTouched(e.target.name);\r\n    handleChange(e);\r\n  };\r\n  const phoneRef = useRef();\r\n  const pinRef = useRef();\r\n\r\n  const sendPin = async (e) => {\r\n    setPinBtnText(t('Sending'));\r\n    setPinBtnIcon(<MoreHoriz />);\r\n    try {\r\n      // const lang = language === 'en-us' ? 'en-gb' : language;\r\n      const lang = config.languages.find(v => v.key == language).key1\r\n      const resp = await generatePin({ email: email, language: lang });\r\n      if (resp.isSuccess) {\r\n        setHavePin(true);\r\n        setPinBtnText(t('Enter PIN'));\r\n        setPinBtnIcon(<ChevronRight />);\r\n      }\r\n    } catch (error) {\r\n      setHavePin(false);\r\n      setPinBtnText(t('Send PIN'));\r\n      setPinBtnIcon(<Send />);\r\n    }\r\n  };\r\n\r\n  const verifyEmailPin = async () => {\r\n    setVerifingPin(true);\r\n    setPinBtnText(t('Verifying'));\r\n    setPinBtnIcon(<MoreHoriz />);\r\n    try {\r\n      const resp = await verifyPin({ email: email, value: emailPin });\r\n      if (resp.isSuccess) {\r\n        setVerifingPin(false);\r\n        setVerifiedPin(true);\r\n        setPinBtnText(t('PIN Verified'));\r\n        setPinBtnIcon(<Check />);\r\n        isPinVerified = true;\r\n      }\r\n    } catch (error) {\r\n      setVerifingPin(false);\r\n      setPinBtnText(t('Enter PIN'));\r\n      setPinBtnIcon(<ChevronRight />);\r\n      errors.emailPin = t('PIN not verified');\r\n      setFieldTouched(t('emailPin'));\r\n    }\r\n  };\r\n\r\n  useEffect(()=> {\r\n    let locale;\r\n    switch (language) {\r\n      case 'ar-ae':\r\n        locale = 'ar';\r\n        break;\r\n      case 'ja-jp':\r\n        locale = 'jp';\r\n        break;\r\n      case 'zh-cn':\r\n        locale = 'ch';\r\n        break;\r\n      case 'es-es':\r\n        locale = 'es';\r\n        break;\r\n      case 'so-kr':\r\n        locale = 'so';\r\n        break;\r\n      case 'fa-ir':\r\n        locale = 'fa';\r\n        break;\r\n      case 'ru':\r\n        locale = 'ru';\r\n        break;\r\n      case 'en-us':\r\n      default:\r\n        locale = 'en';\r\n    }\r\n    i18n.changeLanguage(locale)\r\n    // i18n.changeLanguage(language === 'ar-ae' ? 'ar' : 'en')\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    setHavePin(false);\r\n    setPinBtnText(t('Send PIN'));\r\n    setPinBtnIcon(<Send />);\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    if (havePin) pinRef.current.focus();\r\n  }, [havePin]);\r\n\r\n  useEffect(() => {\r\n    if (emailPin.length === 6) verifyEmailPin();\r\n  }, [emailPin]);\r\n\r\n  useEffect(() => {\r\n    const selCountry = countryCallingCode.find(\r\n      (countries) => countries.country === countryResidency\r\n    );\r\n    if (selCountry) {\r\n      setFieldValue('phone', '+' + selCountry.calling_code);\r\n    }\r\n  }, [countryResidency]);\r\n\r\n  const handleBlur = (field) => {\r\n    setFieldTouched(field);\r\n  };\r\n\r\n  const [showPasswpord1, setShowPassword1]= useState(false);\r\n  const [showPasswpord2, setShowPassword2]= useState(false);\r\n\r\n  return (\r\n    <Container className={language === 'ar-ae' ? 'dir-ar-ae' : ''}>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"standard\"\r\n          className=\"mb-4\"\r\n          name=\"firstName\"\r\n          helperText={touched.firstName ? errors.firstName : ''}\r\n          error={touched.firstName ? Boolean(errors.firstName) : false}\r\n          label={t('First Name')}\r\n          value={firstName}\r\n          onChange={myhandleChange}\r\n          onBlur={() => {\r\n            handleBlur('firstName');\r\n          }}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          variant=\"standard\"\r\n          className=\"mb-4\"\r\n          name=\"lastName\"\r\n          helperText={touched.lastName ? errors.lastName : ''}\r\n          error={touched.lastName ? Boolean(errors.lastName) : false}\r\n          label={t('Last Name')}\r\n          value={lastName}\r\n          onChange={handleChange}\r\n          onBlur={handleChange}\r\n          onBlur={() => {\r\n            handleBlur('lastName');\r\n          }}\r\n          fullWidth\r\n        />\r\n        <Autocomplete\r\n          id=\"country\"\r\n          className=\"mb-2\"\r\n          options={countries}\r\n          fullWidth\r\n          autoHighlight\r\n          blurOnSelect\r\n          value={getCountryObjByName(countryResidency)}\r\n          onChange={(e, value) => {setFieldValue(\"countryResidency\", value ? value.countryEn : ''); }}\r\n          getOptionLabel={(option) =>\r\n            language === 'ar-ae' ? option.countryAr : option.countryEn\r\n          }\r\n          renderOption={(option) => (\r\n            <>\r\n              {language === 'ar-ae' ? option.countryAr : option.countryEn}\r\n            </>\r\n          )}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={t('Country of Residence')}\r\n              name=\"countryResidency\"\r\n              value={countryResidency}\r\n              helperText={\r\n                touched.countryResidency ? errors.countryResidency : ''\r\n              }\r\n              error={\r\n                touched.countryResidency\r\n                  ? Boolean(errors.countryResidency)\r\n                  : false\r\n              }\r\n              onBlur={() => {\r\n                handleBlur('countryResidency');\r\n              }}\r\n              variant=\"standard\"/>\r\n          )}\r\n        />\r\n        <TextField\r\n          variant=\"standard\"\r\n          className=\"mb-4\"\r\n          name=\"phone\"\r\n          inputRef={phoneRef}\r\n          onBlur={() => {\r\n            handleBlur('phone');\r\n          }}\r\n          helperText={touched.phone ? errors.phone : ''}\r\n          error={touched.phone ? Boolean(errors.phone) : false}\r\n          label={t('Phone')}\r\n          fullWidth\r\n          value={phone}\r\n          onChange={handleChange}\r\n          inputProps={{ className: 'dir-ltr' }}\r\n        />\r\n        <TextField\r\n          variant=\"standard\"\r\n          className=\"mb-4\"\r\n          name=\"email\"\r\n          helperText={touched.email ? errors.email : ''}\r\n          error={touched.email ? Boolean(errors.email) : false}\r\n          label={t('Email')}\r\n          onBlur={() => {\r\n            handleBlur('email');\r\n          }}\r\n          fullWidth\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          variant=\"standard\"\r\n          className=\"mb-2\"\r\n          name=\"portalPassword\"\r\n          onBlur={() => {\r\n            handleBlur('portalPassword');\r\n          }}\r\n          helperText={touched.portalPassword ? errors.portalPassword : ''}\r\n          error={\r\n            touched.portalPassword ? Boolean(errors.portalPassword) : false\r\n          }\r\n          label={t('Password')}\r\n          fullWidth\r\n          type={showPasswpord1 ? 'text': 'password'}\r\n          value={portalPassword}\r\n          onChange={handleChange}\r\n        \r\n          InputProps={{\r\n            endAdornment:\r\n            <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={()=>{setShowPassword1(!showPasswpord1)}}\r\n              >\r\n                {showPasswpord1? <Visibility/>: <VisibilityOff/>}\r\n              </IconButton>,\r\n            }}\r\n\r\n        />\r\n\r\n        <TextField\r\n            variant=\"standard\"\r\n            className=\"mb-2\"\r\n            name=\"portalPasswordConfirm\"\r\n            onBlur={() => {\r\n              handleBlur('portalPasswordConfirm');\r\n            }}\r\n            helperText={touched.portalPasswordConfirm ? errors.portalPasswordConfirm : ''}\r\n            error={\r\n              touched.portalPasswordConfirm ? Boolean(errors.portalPasswordConfirm) : false\r\n            }\r\n            label={t('Confirm Password')}\r\n            fullWidth\r\n            type={showPasswpord2 ? 'text': 'password'}\r\n            value={portalPasswordConfirm}\r\n            onChange={handleChange}\r\n          \r\n            InputProps={{\r\n              endAdornment:\r\n              <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={()=>{setShowPassword2(!showPasswpord2)}}\r\n                >\r\n                  {showPasswpord2? <Visibility/>: <VisibilityOff/>}\r\n                </IconButton>,\r\n              }}\r\n\r\n          />\r\n        <div className=\"mb-4\">\r\n          <div className=\"badge badge-pill badge-info mr-1\">\r\n            {t('8-20 characters')}\r\n          </div>\r\n          <div className=\"badge badge-pill badge-info mr-1\">\r\n            {t('Latin Letters')}\r\n          </div>\r\n          <div className=\"badge badge-pill badge-info mr-1\">{t('Numbers')}</div>\r\n        </div>\r\n        <div className=\"d-flex align-items-center justify-content-start\">\r\n          <Button\r\n            className=\"btn-warning mb-4\"\r\n            disabled={Boolean(errors.email) || havePin}\r\n            endIcon={pinBtnIcon}\r\n            onClick={sendPin}>\r\n            {t(pinBtnText)}\r\n          </Button>\r\n          <TextField\r\n            variant=\"standard\"\r\n            className=\"mb-4 mx-3\"\r\n            inputRef={pinRef}\r\n            label={t('Enter PIN')}\r\n            helperText={touched.emailPin ? errors.emailPin : ''}\r\n            error={touched.emailPin ? Boolean(errors.emailPin) : false}\r\n            value={emailPin}\r\n            onChange={handleChange}\r\n            name=\"emailPin\"\r\n            disabled={!havePin || verifingPin || verifiedPin}\r\n          />\r\n        </div>\r\n        {havePin && (\r\n          <div className=\"MuiFormHelperText-root mb-4 text-center text-danger\">\r\n            {t('PIN sent to your email, please verify')}\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex justify-content-between\">\r\n          <Checkbox\r\n            checked={tos}\r\n            onChange={handleChange}\r\n            name=\"tos\"\r\n            id=\"tos\"\r\n            value=\"true\"\r\n            className=\"align-self-start p-0 mx-2\"\r\n            color=\"default\"\r\n          />\r\n          <div className=\"mb-4\">\r\n            <p>\r\n              {t('By clicking here I give my consent for')}\r\n              &nbsp; <b>{t('Bank al Ethiha')}</b> &nbsp;\r\n              {t(\r\n                'to contact me for marketing purposes, You can opt out at any time, For further details please see our'\r\n              )}\r\n              <a\r\n                href=\"https://exiniti.blob.core.windows.net/public/Accuindex-Limited-Privacy-Notice.pdf\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"link\">\r\n                {t('Marketing and Communication Policy Statement')}\r\n              </a>\r\n              .\r\n            </p>\r\n            <p\r\n              className=\"MuiFormHelperText-root Mui-error\"\r\n              style={{ color: 'red', fontSize: 'small' }}>\r\n              {touched.emailPin &&\r\n                errors.tos &&\r\n                t('You must tick the consent form')}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            style={{ minWidth: '8rem' }}\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            className=\"btn-success\"\r\n            disabled={!activeSubmit || props.isLoading}>\r\n            {props.isLoading ? (\r\n              <CircularProgress size={20} />\r\n            ) : (\r\n              t('Register Now')\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst LivePreviewExample = (props) => {\r\n  const t = props.t;\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string('Enter a first name').required(\r\n      t('First name is required')\r\n    ),\r\n    lastName: Yup.string('Enter a last name').required(\r\n      t('Last name is required')\r\n    ),\r\n    countryResidency: Yup.string('Select your country of residence').required(\r\n      t('Country of residence is required')\r\n    ),\r\n    city: Yup.string('Enter City'),\r\n    phone: Yup.string('Enter your Phone')\r\n      .required(t('Phone is required'))\r\n      .matches(phoneRegExp, t('Phone number is not valid')),\r\n    email: Yup.string('Enter your email')\r\n      .required(t('Email is required'))\r\n      .email(t('Enter a valid email'))\r\n      .test(\r\n        'email-availability',\r\n        t('Account already exists with this email, Kindly login'),\r\n        async (value) => {\r\n          try {\r\n            if (validEmail(value)) {\r\n              const resp = await isEmailAvailable({\r\n                email: value.toLowerCase()\r\n              });\r\n\r\n              return resp.result.availability;\r\n            }\r\n            return false;\r\n          } catch (error) {\r\n            console.error(error);\r\n            return false;\r\n          }\r\n        }\r\n      ),\r\n    portalPassword: Yup.string('')\r\n      .min(8, t('Password must contain atleast 8 characters'))\r\n      .max(20, t('Password should not be more than 20 characters long'))\r\n      .matches(\r\n        passwordRegExp,\r\n        t('Atleast one lower case, upper case and number required')\r\n      )\r\n      .required(t('Enter your password')),\r\n    portalPasswordConfirm: Yup.string('')\r\n    .oneOf([Yup.ref('portalPassword'), null], 'Passwords must match').required(t('Enter confirm password')),\r\n    emailPin: Yup.string('')\r\n      .required(t('PIN must be entered'))\r\n      .length(6, t('Pin should be 6 characters exact')),\r\n    // .test('verify-pin', 'PIN must be verfied', async (value) => {\r\n    //   return isPinVerified;\r\n    // }),\r\n    tos: Yup.boolean().oneOf([true], t('Accept Terms & Conditions is required'))\r\n  });\r\n\r\n  const { history, language } = props;\r\n\r\n  const [activeSubmit, setActiveSubmit] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [infoBar, setInfoBar] = useState(false);\r\n  const [errorBar, setErrorBar] = useState(false);\r\n  const [partnerId, setPartnerId] = useState(false);\r\n  const [ibId, setIbId] = useState(false);\r\n  const [referral, setReferral] = useState(false);\r\n  const [utmCampaign, setUtmCampaign] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const partnerId = params.get('ibRef');\r\n    const ibId = params.get('ibId');\r\n    const referral = params.get('ref');\r\n    const utm = params.get('utm-campaign');\r\n    if (partnerId) {\r\n      setPartnerId(partnerId);\r\n      localStorage.setItem('partnerId', partnerId)\r\n    }\r\n    if(ibId){\r\n      setIbId(ibId);\r\n      localStorage.setItem('ibId', ibId)\r\n    }\r\n    if (referral) {\r\n      setReferral(referral);\r\n      localStorage.setItem('referral', referral)\r\n    }\r\n    if (utm) {\r\n      setUtmCampaign(utm)\r\n      localStorage.setItem('utm', utm)\r\n    }\r\n  }, []);\r\n\r\n  const submit = async (data) => {\r\n    setActiveSubmit(false);\r\n    setIsLoading(true);\r\n    let storedPartner = localStorage.getItem('partnerId');\r\n    let storedIbId = localStorage.getItem('ibId');\r\n    \r\n    if (partnerId) data.ibRef = partnerId;\r\n    else if(storedPartner) data.ibRef = storedPartner\r\n\r\n    if(ibId) data.ibId = ibId;\r\n    else if(storedIbId) data.ibId = storedIbId;\r\n\r\n    try {\r\n      let storedRef = localStorage.getItem('referral')\r\n      if(referral) data.referral = referral\r\n        else if(storedRef)  data.referral = storedRef\r\n          else data.referral = null\r\n      let storedUtm = localStorage.getItem('utm')\r\n      if(utmCampaign) data.utmCampaign = utmCampaign\r\n        else if(storedUtm)  data.utmCampaign = storedUtm\r\n          else data.utmCampaign = null\r\n      // console.log(data)\r\n      \r\n       data.language = config.languages.find(v => v.key === language).key1\r\n       data.countryCode = getCountryCodeShort(data.countryResidency)\r\n       const resp = await registerLiveUser(data);\r\n\r\n      setIsLoading(false);\r\n      if (resp.isSuccess) {\r\n        setInfoBar(true);\r\n        window.location.replace(`${CP_GATE}?token=${resp.result}`);\r\n      } else {\r\n        setErrorBar(true);\r\n        setActiveSubmit(true);\r\n      }\r\n    } catch (error) {\r\n      setErrorBar(true);\r\n      setActiveSubmit(true);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    countryResidency: 'United Arab Emirates',\r\n    phone: '+971',\r\n    email: '',\r\n    portalPassword: '',\r\n    portalPasswordConfirm: '',\r\n    emailPin: '',\r\n    declarations: [\r\n      'By clicking here I give my consent for Accuindex to contact me for marketing purposes. You can opt out at any time. For further details please see ourMarketing and Communication Policy Statement.'\r\n    ],\r\n    tos: false,\r\n    language: language === 'en-us' ? 'en-gb' : language\r\n  };\r\n\r\n  const handleInfoBarClose = () => {\r\n    setInfoBar(false);\r\n  };\r\n\r\n  const handleErrorBarClose = () => {\r\n    setErrorBar(false);\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const tmp = async () => {\r\n    try {\r\n      const currentCountry = await locateMe();\r\n      setValues({\r\n        ...values,\r\n        countryResidency: getCountryByCountryCode(currentCountry.country || 'AE')\r\n      });\r\n    } catch (error) {\r\n      console.log('Locate Error', error);\r\n      setValues({\r\n        ...values,\r\n        countryResidency: getCountryByCountryCode('AE')\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    tmp();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        validateOnMount={false}\r\n        validateOnChange={true}\r\n        validate={false}\r\n        validateOnBlur={true}\r\n        initialValues={values}\r\n        validationSchema={validationSchema}\r\n        onSubmit={submit}>\r\n        {(props) => (\r\n          <Formis\r\n            activeSubmit={activeSubmit}\r\n            isLoading={isLoading}\r\n            language={language}\r\n            {...props}\r\n          />\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // Auth: state.Auth\r\n    language: state.language\r\n  };\r\n};\r\n\r\n// export default LivePreviewExample;\r\nexport default withNamespaces()(\r\n  connect(mapStateToProps, { })(LivePreviewExample)\r\n);\r\nconst Formis = withNamespaces()(Form);\r\n"],"sourceRoot":""}